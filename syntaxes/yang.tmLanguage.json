{
  "fileTypes": [
    "yang"
  ],
  "name": "yang",
  "patterns": [
    {
      "match": "//.+",
      "name": "comment.line.source.yang"
    },
    {
      "begin": "/\\*",
      "end": "\\*/",
      "name": "comment.block.source.yang"
    },
    {
      "begin": "\\\"",
      "end": "\\\"",
      "name": "string.quoted.source.yang"
    },
    {
      "begin": "\\'",
      "end": "\\'",
      "name": "string.quoted.source.yang"
    },
    {
      "captures": {
        "2": {
          "name": "meta.function.definition.yang"
        }
      },
      "match": "((?<=[^\\w-]|^))(module)((?=[^\\w-]|$))"
    },
    {
      "captures": {
        "2": {
          "name": "keyword.control.yang"
        }
      },
      "match": "((?<=[^\\w-]|^))(augment|case|choice|container|enum|feature|grouping|identity|import|include|leaf|leaf-list|module|submodule|type|typedef)((?=[^\\w-]|$))"
    },
    {
      "captures": {
        "2": {
          "name": "keyword.source.yang"
        }
      },
      "match": "((?<=[^\\w-]|^))(anyxml|argument|base|belongs-to|bit|config|contact|default|description|error-app-tag|error-message|extension|deviation|deviate|fraction-digits|if-feature|input|key|length|list|mandatory|max-elements|min-elements|must|namespace|ordered-by|organization|output|path|pattern|position|prefix|presence|range|reference|refine|require-instance|revision|revision-date|status|unique|units|uses|value|when|yang-version|yin-element)((?=[^\\w-]|$))"
    },
    {
      "captures": {
        "2": {
          "name": "constant.language.source.yang"
        }
      },
      "match": "((?<=[^\\w-]|^))(system|unbounded|user)((?=[^\\w-]|$))"
    },
    {
      "captures": {
        "2": {
          "name": "constant.language.source.yang"
        }
      },
      "match": "((?<=\\bdeviate\\s))(add|delete|not-supported|replace)((\\b))"
    },
    {
      "captures": {
        "2": {
          "name": "constant.language.source.yang"
        }
      },
      "match": "((?<=\\bstatus\\s))(current|deprecated|obsolete)((\\b))"
    },
    {
      "captures": {
        "2": {
          "name": "storage.type.source.yang"
        }
      },
      "match": "((?<=[^\\w-]|^))([A-Za-z0-9_-]+:[A-Za-z0-9_-]+)"
    },
    {
      "captures": {
        "2": {
          "name": "storage.type.source.yang"
        }
      },
      "match": "((?<=\\bbase\\s)|(?<=\\btype\\s)|(?<=\\bprefix\\s))([A-Za-z0-9_-]+)((\\b))"
    },
    {
      "captures": {
        "2": {
          "name": "storage.type.source.yang"
        }
      },
      "match": "(\\b)(?<!-)(decimal64|int8|int16|int32|int64|uint8|uint16|uint32|uint64|string|boolean|enumeration|bits|binary|leafref|identityref|empty|instance-identifier)(?!-)(\\b)"
    },
    {
      "captures": {
        "2": {
          "name": "constant.language.source.yang"
        }
      },
      "match": "(\\b)(true|false)(\\b)"
    },
    {
      "captures": {
        "1": {
          "name": "constant.numeric.source.yang"
        },
        "2": {
          "name": "constant.numeric.source.yang"
        },
        "3": {
          "name": "constant.numeric.source.yang"
        }
      },
      "match": "(?<!-)(\\b|(?<!-)\\.)(\\d+)(\\b|(?!-)\\.)(?!-)"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.source.yang"
        },
        "3": {
          "name": "entity.name.function.source.yang"
        }
      },
      "match": "(\\brpc|\\bnotification)(\\s+)([\\w_\\-\\d]+)"
    }
  ],
  "scopeName": "source.yang",
  "uuid": "6d38bd0e-cb6f-4f02-870f-9384bad6762a"
}